###############################################################################
# A description of convection in a 3d box. See the manual for more information.

# At the top, we define the number of space dimensions we would like to
# work in:
set Dimension                              = 3

# There are several global variables that have to do with what
# time system we want to work in and what the end time is. We
# also designate an output directory.
set Use years in output instead of seconds = false #true
set Start time                             = 0
set End time                               = 1.3e14
set Output directory                       = /home/Felipe/MWork/fff
#set Resume computation                     = true

# Then there are variables that describe the tolerance of
# the linear solver as well as how the pressure should
# be normalized. Here, we choose a zero average pressure
# at the surface of the domain (for the current geometry, the
# surface is defined as the top boundary).

set Pressure normalization                 = surface
set Surface pressure                       = 1e5


 subsection Solver parameters

   set Temperature solver tolerance           = 1e-10

      subsection Stokes solver parameters
            set Linear solver tolerance                = 1e-8
      end
 end


# Then come a number of sections that deal with the setup
# of the problem to solve. The first one deals with the
# geometry of the domain within which we want to solve.
# The sections that follow all have the same basic setup
# where we select the name of a particular model (here,
# the box geometry) and then, in a further subsection,
# set the parameters that are specific to this particular
# model.
subsection Geometry model
  set Model name = box

  subsection Box
    set X extent = 4e5
    set Y extent = 2e5
    set Z extent = 2.5e5
  end

  subsection Initial topography model

    set Model name = ascii data

    subsection Ascii data model
       set Data directory = /home/Felipe/MWork/
       set Data file name = MyIniTopo.txt
    end
  end

end


# The next section deals with the initial conditions for the
# temperature (there are no initial conditions for the
# velocity variable since the velocity is assumed to always
# be in a static equilibrium with the temperature field).
# There are a number of models with the 'function' model
# a generic one that allows us to enter the actual initial
# conditions in the form of a formula that can contain
# constants. We choose a linear temperature profile that
# matches the boundary conditions defined below plus
# a small perturbation:

subsection Initial temperature model
  set Model name = function

  subsection Function
    set Variable names      = x,y,z
    #set Function constants  = ltherm=1.106e5 , a1=0.0705230784 , a2=0.0422820123 , a3=0.0092705272 , a4=0.0001520143 , a5=0.0002765672,  a6=0.0000430638 , bxh=2.9e6

    set Function expression = 500
# 280 + 1300*( 1 - ( 1 + a1*((bxh-z)/ltherm) + a2*(( (bxh-z)/ltherm )^2) + a3*(( (bxh-z)/ltherm )^3) + a4*(( (bxh-z)/ltherm )^4) + a5*(((bxh-z)/ltherm)^5) + a6*(( (bxh-z)/ltherm )^6) )^-16 )

  end
end


# Then follows a section that describes the boundary conditions
# for the temperature. The model we choose is called 'box' and
# allows to set a constant temperature on each of the four sides
# of the box geometry. In our case, we choose something that is
# heated from below and cooled from above. (As will be seen
# in the next section, the actual temperature prescribed here
# at the left and right does not matter.)

subsection Boundary temperature model
  set List of model names = function
  set Fixed temperature boundary indicators  = bottom, top

  subsection Function
    set Variable names      = x,y,z

    set Function expression = 500

  end
 end



# We then also have to prescribe several other parts of the model such as
# which boundaries actually carry a prescribed boundary temperature, whereas
# all other parts of the boundary are insulated (i.e., no heat flux through
# these boundaries; this is also often used to specify symmetry boundaries).
#

  # boundary we prescribe a zero or nonzero velocity and
  # on which parts the flow is allowed to be tangential.
  # Here, all six sides of the box allow tangential
  # unrestricted flow but with a zero normal component:
 # set Zero velocity boundary indicators       = top
subsection Boundary velocity model

  set Tangential velocity boundary indicators = back , front

end


subsection Boundary traction model
   set Prescribed traction boundary indicators = bottom:function , left:function , right:function

  subsection Function
     set Coordinate system = cartesian
     set Variable names = x,y,z
     set Function constants = Pbott=9e9, dens=3400, g=10, H=2.52e5

     set Function expression = if( x<=0, dens*g*(H-z), if(x<4e5,0,-dens*g*(H-z)) ) ; 0 ; if(z<=0,Pbott,0)


#     set Function expression = if( x<=0, dens*g*(H-z), if(x>=4e5,-dens*g*(H-z),0) ) ; 0 ; if(z<=0,Pbott,0)

  end

end


# The following two sections describe first the
# direction (vertical) and magnitude of gravity and the
# material model (i.e., density, viscosity, etc). We have
# discussed the settings used here in the introduction to
# this cookbook in the manual already.
subsection Gravity model
  set Model name = vertical

  subsection Vertical
    set Magnitude = 10   # = Ra / Thermal expansion coefficient
  end
end

######################################################################
subsection Compositional fields
  set Number of fields = 3
  set Names of fields = crust,lm1, lm2
end

subsection Initial composition model
  set Model name = function

  subsection Function
    set Variable names      = x,y,z

    set Function expression = if(z>2.1e5,1,0) ; if( x<=2e5, if( z>1.5e5 & z<2.1e5,1,0) , 0 ) ; if( x>2e5, if( z>1e5 & z<2.1e5,1,0) , 0 )

  end
end


subsection Material model
  
  set Model name = multicomponent

  subsection Multicomponent

    set Densities = 3400 , 2600 , 3400 , 3300    
    set Reference temperature = 400
    set Specific heats = 1250 , 1250 , 1250 , 1250
    set Thermal conductivities =  4 , 4 , 4 , 4
    set Thermal expansivities = 4e-5 , 4e-5 , 4e-5 , 4e-5
    set Viscosities = 1e21 , 1e20 , 1e22 , 1e22
    set Viscosity averaging scheme = harmonic

  end

end #end Material model


# The settings above all pertain to the description of the
# continuous partial differential equations we want to solve.
# The following section deals with the discretization of
# this problem, namely the kind of mesh we want to compute
# on. We here use a globally refined mesh without
# adaptive mesh refinement.
subsection Mesh refinement
# set Refinement fraction                      = 0.09
# set Coarsening fraction                      = 0.15
  set Initial global refinement                = 3
  set Initial adaptive refinement              = 3
  set Strategy = minimum refinement function, strain rate #, temperature
  set Refinement criteria merge operation = plus
 # set Refinement criteria scaling factors = 0.33, 067
  subsection Minimum refinement function
    set Coordinate system = cartesian
    set Variable names = x,y,z
    set Function expression = if( x>1e5 & x<3e5 & z>0.5e5, if(x>1.5e5 & x<2.5e5 & z>1.5e5, 8 , 5 ) , 3 )
  end
 
  set Time steps between mesh refinement       = 20
#  set Additional refinement times              = 9.1e7
end


#(zero) and final time (0.5) this means that
# we will obtain 50 output files.
subsection Postprocess

  set List of postprocessors = velocity statistics, temperature statistics, heat flux statistics, visualization, composition statistics, dynamic topography #, particles

  subsection Dynamic topography
    set Density above = 1.0
  end

  subsection Visualization
    set List of output variables = density, viscosity, dynamic topography
    set Time between graphical output = 3.1557e12
    set Output format = vtu 
    set Number of grouped files = 1
  end #end Visualization

#  subsection Particles
#    set Number of particles = 20000
   
#    set Time between data output = 3.1558e15
#    set Data output format = vtu
#    set Particle generator name = ascii file
#    set Number of grouped files = 1
 #
#    subsection Generator   
#      subsection Ascii file
#        set Data directory = ./
#        set Data file name = MyTracers_20k_lower200km.txt
#      end
#    end

#    set List of particle properties = initial composition, initial position, pT path


#  end

end #end Postprocess


subsection Checkpointing
  # The number of timesteps between performing checkpoints. If 0 and time
  # between checkpoint is not specified, checkpointing will not be performed.
  # Units: None.
  set Steps between checkpoint = 20
end
